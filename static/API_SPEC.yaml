openapi: 3.0.1
info:
  title: DTC API
  version: '2.0'
paths:
  /deck:
    post:
      tags:
        - DeckList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeckCreationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/DeckCreationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeckCreationRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DeckResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/DeckResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DeckResponse'
  /deck/{deckId}:
    get:
      tags:
        - DeckList
      parameters:
        - name: deckId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
    delete:
      tags:
        - DeckList
      parameters:
        - name: deckId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
        - name: userId
          in: header
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
    put:
      tags:
        - DeckList
      parameters:
        - name: deckId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeckCreationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/DeckCreationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeckCreationRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DeckResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/DeckResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DeckResponse'
  /deck/search:
    get:
      tags:
        - DeckList
      parameters:
        - name: name
          in: query
          style: form
          schema:
            type: string
        - name: format
          in: query
          style: form
          schema:
            type: string
        - name: sortBy
          in: query
          style: form
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeckSearchResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeckSearchResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeckSearchResponse'
  /deck/users/{UserName}:
    get:
      tags:
        - DeckList
      parameters:
        - name: requestingUser
          in: header
          style: simple
          schema:
            type: string
        - name: UserName
          in: path
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeckSearchResponse'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeckSearchResponse'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeckSearchResponse'
  /card/{cardId}:
    get:
      tags:
        - DeckList
      parameters:
        - name: cardId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Card'
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
            text/json:
              schema:
                $ref: '#/components/schemas/Card'
  /card/bulk:
    post:
      tags:
        - DeckList
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
          text/json:
            schema:
              type: array
              items:
                type: string
                format: uuid
          application/*+json:
            schema:
              type: array
              items:
                type: string
                format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
  /card/search:
    get:
      tags:
        - DeckList
      parameters:
        - name: q
          in: query
          style: form
          schema:
            type: string
        - name: page
          in: query
          style: form
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Card'
  /deck/{deckId}/like:
    patch:
      tags:
        - DeckList
      parameters:
        - name: deckId
          in: path
          required: true
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  /user:
    post:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNewUser'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateNewUser'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateNewUser'
      responses:
        '200':
          description: Success
  /user/login:
    post:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/AuthenticateRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AuthenticateRequest'
      responses:
        '200':
          description: Success
components:
  schemas:
    AuthenticateRequest:
      required:
        - email
        - password
      type: object
      properties:
        email:
          minLength: 1
          type: string
        password:
          minLength: 1
          type: string
      additionalProperties: false
    Card:
      type: object
      properties:
        id:
          type: string
          format: uuid
        oracle_id:
          type: string
          format: uuid
        multiverse_ids:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        tcgplayer_id:
          type: integer
          format: int32
          nullable: true
        cardmarket_id:
          type: integer
          format: int32
          nullable: true
        oracle_text:
          type: string
          nullable: true
        flavor_text:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        lang:
          type: string
          nullable: true
        release_at:
          type: string
          format: date-time
        uri:
          type: string
          format: uri
          nullable: true
        scryfall_uri:
          type: string
          format: uri
          nullable: true
        layout:
          type: string
          nullable: true
        highres_image:
          type: boolean
        image_status:
          type: string
          nullable: true
        image_uris:
          type: array
          items:
            type: string
            format: uri
          nullable: true
        cmc:
          type: integer
          format: int32
        mana_cost:
          type: string
          nullable: true
        type_line:
          type: string
          nullable: true
        power:
          type: string
          nullable: true
        toughness:
          type: string
          nullable: true
        colors:
          type: array
          items:
            type: string
          nullable: true
        color_identity:
          type: array
          items:
            type: string
          nullable: true
        keywords:
          type: array
          items:
            type: string
          nullable: true
        legalities:
          type: array
          items:
            type: string
          nullable: true
        games:
          type: array
          items:
            type: string
          nullable: true
        reserved:
          type: boolean
        foil:
          type: boolean
        nonfoil:
          type: boolean
        finishes:
          type: array
          items:
            type: string
          nullable: true
        oversized:
          type: boolean
        promo:
          type: boolean
        reprint:
          type: boolean
        variation:
          type: boolean
        set_id:
          type: string
          format: uuid
        set:
          type: string
          nullable: true
        set_name:
          type: string
          nullable: true
        set_type:
          type: string
          nullable: true
        rarity:
          type: string
          nullable: true
        artist:
          type: string
          nullable: true
        card_faces:
          type: array
          items:
            $ref: '#/components/schemas/CardFace'
          nullable: true
      additionalProperties: false
    CardAmmount:
      type: object
      properties:
        amount:
          type: integer
          format: int32
        CardInfo:
          $ref: '#/components/schemas/Card'
        is_commander:
          type: boolean
      additionalProperties: false
    CardFace:
      type: object
      properties:
        name:
          type: string
          nullable: true
        image_uris:
          type: array
          items:
            type: string
            format: uri
          nullable: true
        mana_cost:
          type: string
          nullable: true
        type_line:
          type: string
          nullable: true
        colors:
          type: array
          items:
            type: string
          nullable: true
        power:
          type: string
          nullable: true
        toughness:
          type: string
          nullable: true
        oracle_text:
          type: string
          nullable: true
        flavor_text:
          type: string
          nullable: true
      additionalProperties: false
    CreateNewUser:
      type: object
      properties:
        username:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
    CreationCardAmmount:
      type: object
      properties:
        amount:
          type: integer
          format: int32
        card_id:
          type: string
          format: uuid
        is_commander:
          type: boolean
      additionalProperties: false
    DeckCreationRequest:
      type: object
      properties:
        Privacy:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        format:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        cover_image:
          type: string
          nullable: true
        mainboard:
          type: array
          items:
            $ref: '#/components/schemas/CreationCardAmmount'
          nullable: true
        sideboard:
          type: array
          items:
            $ref: '#/components/schemas/CreationCardAmmount'
          nullable: true
        considering:
          type: array
          items:
            $ref: '#/components/schemas/CreationCardAmmount'
          nullable: true
      additionalProperties: false
    DeckResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        editors:
          type: array
          items:
            type: string
          nullable: true
        privacy:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        format:
          type: string
          nullable: true
        likes:
          type: integer
          format: int32
        dislikes:
          type: integer
          format: int32
        views:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
        cover_image:
          type: string
          nullable: true
        mainboard:
          type: array
          items:
            $ref: '#/components/schemas/CardAmmount'
          nullable: true
        sideboard:
          type: array
          items:
            $ref: '#/components/schemas/CardAmmount'
          nullable: true
        considering:
          type: array
          items:
            $ref: '#/components/schemas/CardAmmount'
          nullable: true
        created_date:
          type: string
          format: date-time
        modified_date:
          type: string
          format: date-time
        liked:
          type: boolean
      additionalProperties: false
    DeckSearchResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        editors:
          type: array
          items:
            type: string
          nullable: true
        privacy:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        format:
          type: string
          nullable: true
        likes:
          type: integer
          format: int32
        dislikes:
          type: integer
          format: int32
        views:
          type: integer
          format: int32
        cover_image:
          type: string
          nullable: true
        created_date:
          type: string
          format: date-time
        modified_date:
          type: string
          format: date-time
      additionalProperties: false
